<#@ template debug="false" hostspecific="True" language="C#" #>
<#@ output extension=".txt" #>
<#@ include file="$(ProjectDir)DMSCTemp\MultipleOutputHelper.ttinclude"#>
<#@ assembly name="$(SolutionDir)Helper\bin\Debug\Helper.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="DMSCCore" #>
<#@ import namespace="System.IO" #>

<#
	string solutionDir = Host.ResolveAssemblyReference("$(SolutionDir)"); //获取当前路径
    List<Table> list=DMSC.Main();  //获取表集合
	var manager = Manager.Create(Host, GenerationEnvironment);
	foreach(Table table in list){
		string dire=solutionDir+"DbOrm\\"+table.Name.Substring(0,table.Name.IndexOf('_'))+"\\";
        string path=dire+table.Name+".Designer.cs";
		if (!Directory.Exists(dire)) { Directory.CreateDirectory(dire); }
        if(File.Exists(path)){File.Delete(path);}
		manager.StartNewFile(path);  //必须放在输出的字符串之前
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是由工具生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Text;

namespace DbOrm.Model
{
    /// <summary>
    /// <#=table.Description#>
    /// </summary>
    public partial class <#=table.Name#> : IDAL
    {
<#        foreach(Column column in table.Column){ #>
        /// <summary>
        /// <#=column.Description#>
        /// </summary>
        public <#=column.CType#> <#=column.Name#> { set; get; }
<#        }#>
        /// <summary>
        /// 新增
        /// </summary>
        internal override string Insert()
        {
            return "insert into <#=table.Name#>(<#bool b=true;foreach(Column c in table.Column.Where(s=>!s.IsIdentity)){if(b){Write(c.Name);b=false;}else{Write(','+c.Name);}} #>) values(<#b=true;foreach(Column c in table.Column.Where(s=>!s.IsIdentity)){if(b){Write('@'+c.Name);b=false;}else{Write(",@"+c.Name);}} #>)";
        }

        /// <summary>
        /// 修改
        /// </summary>
        internal override string Update()
        {
            StringBuilder str = new StringBuilder();
<#        foreach(Column c in table.Column){ #>
            if (<#=c.Name#> != null) { str.AppendLine(",<#=c.Name#>=@<#=c.Name#>"); }
<#        }#>

            return "update <#=table.Name#> set " + str.Remove(0, 1);
        }
    }
}

<#
		manager.EndBlock();  //结束输出文件
//--------------------------生成开发文件--开始--------------------------
        if(!File.Exists(dire+table.Name+".cs")){
manager.StartNewFile(dire+table.Name+".cs");//开始输出
#>
//----------------------------
//手写代码写在此文件
//----------------------------
using System;

namespace DbOrm.Model
{
    /// <summary>
    /// <#=table.Description #>
    /// </summary>
    public partial class <#=table.Name #>
    {

    }
}
<#
manager.EndBlock();  //结束输出文件
        }
//--------------------------生成开发文件--结束--------------------------
	}
	manager.Process(true,false);   //执行编译
#>